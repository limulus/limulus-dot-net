<!doctype html>
<html lang="en">
  <head prefix="og: https://ogp.me/ns# article: https://ogp.me/ns/article#">
    <meta charset="utf-8" />

    <link
      rel="preload"
      href="/assets/fonts/mona-sans.6d7565f0.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <link
      rel="preload"
      href="/lib/blur-hash/worker.XXXXXXXX.js"
      as="script"
      type="text/javascript"
      crossorigin
    />

    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="icon" href="/assets/images/ldn-inverted-128.75ea619b.png" type="image/png" />
    <link rel="icon" href="/assets/svg/ldn.dcaedd8b.svg" type="image/svg+xml" />

    <link rel="stylesheet" :href="getBundleFileUrl('css')" webc:keep />
    <link rel="stylesheet" href="../css/normalize.css" />
    <link rel="stylesheet" href="../css/main.css" />
    <link rel="stylesheet" href="../css/hljs-github.css" />

    <script webc:type="js">
      if (page.url === '/') {
        ;`<title>limulus.net</title>`
      } else {
        ;`<title>limulus.net ${page.url.replace(/\/$/, '').replaceAll('/', ' / ')}</title>`
      }
    </script>

    <link rel="alternate" type="application/rss+xml" :href="feedUrl ?? site.feedUrl" />

    <meta property="og:title" :content="title" />
    <meta property="og:type" :content="tags?.includes('article') ? 'article' : 'website'" />
    <meta property="og:url" :content="site.url + page.url" />
    <meta
      webc:if="subhead || teaser"
      property="og:description"
      :content="subhead ?? teaser"
    />
    <meta property="og:site_name" :content="site.name" />
    <meta property="og:locale" content="en_US" />

    <template webc:if="tags?.includes('article')" webc:nokeep>
      <meta property="article:published_time" :content="date.toISOString()" />
      <meta
        webc:if="history"
        property="article:modified_time"
        :content="history[0].date.toISOString()"
      />
    </template>

    <script webc:type="js">
      const getPreviewPhoto = (id) => {
        const photo = this.getPhoto(id)
        return {
          description: photo.description,
          mime: 'image/jpeg',
          ...photo.renditions.find(
            ({ name, format }) => name === 'md' && format === 'jpeg'
          ),
        }
      }

      const render = () => {
        if (image) {
          var photo = getPreviewPhoto(image)
        } else if (hero) {
          photo = getPreviewPhoto(hero)
        } else if (vod) {
          if (!vod.alt) throw new Error('Missing alt text for video-on-demand hero')
          photo = {
            url: `https://vod.limulus.net/${vod.id}/poster.jpeg`,
            width: 3840,
            height: 2160,
            description: vod.alt,
            mime: 'image/jpeg',
          }
        } else {
          return ''
        }

        return /* HTML */ `
          <meta property="og:image" content="${photo.url}" />
          <meta property="og:image:type" content="${photo.mime}" />
          <meta property="og:image:width" content="${photo.width}" />
          <meta property="og:image:height" content="${photo.height}" />
          <meta
            property="og:image:alt"
            content="${webc.escapeAttribute(photo.description)}"
          />
        `
      }

      render()
    </script>

    <meta webc:if="subhead || teaser" name="description" :content="subhead ?? teaser" />
    <meta
      webc:if="authors[author]?.fediverse"
      name="fediverse:creator"
      :content="authors[author].fediverse"
    />

    <meta name="generator" :content="eleventy.generator" />

    <script type="module" src="/lib/common/index.XXXXXXXX.js" async webc:keep></script>
    <script webc:type="js">
      getBundle('html', 'head')
    </script>
  </head>
  <body @raw="content"></body>
</html>
